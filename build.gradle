plugins {
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'java'
	id 'maven-publish'
}

group = 'icu.clemon'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

def repos = [
		aliyunMavenPublic: [
		        url: "https://maven.aliyun.com/repository/public"
		],
		aliyunMavenRelease: [
		        url: "https://packages.aliyun.com/maven/repository/xxxx-release-xxxx/",
				username: "xxxx",
				password: "xxxx"
		],
		aliyunMavenSnapshot: [
				url: "https://packages.aliyun.com/maven/repository/xxxx-snapshot-xxxx/",
				username: "xxxx",
				password: "xxxx"
		]
]

def lombok = "org.projectlombok:lombok"

jar {
	archiveFileName = "app.jar"
}

repositories {
	mavenLocal()
	maven {
		url repos.aliyunMavenPublic.url
	}
	maven {
		url repos.aliyunMavenRelease.url
		credentials {
			username repos.aliyunMavenRelease.username
			password repos.aliyunMavenRelease.password
		}
	}
	mavenCentral()
}

dependencies {
	implementation 'icu.clemon:common:v0.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

	compileOnly lombok
	annotationProcessor lombok
	testCompileOnly lombok
	testAnnotationProcessor lombok

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

publishing {
	publications {
		Production(MavenPublication) {
			groupId = project.group
			artifactId = project.name
			versionMapping {
				usage('java-api') {
					fromResolutionOf('runtimeClasspath')
				}
				usage('java-runtime') {
					fromResolutionResult()
				}
			}
			from components.java
		}
	}
	repositories {
		maven {
			name = "aliyunPrivateNexus"
			url = version.endsWith('SNAPSHOT') ? repos.aliyunMavenSnapshot.url : repos.aliyunMavenRelease.url
			credentials {
				username version.endsWith('SNAPSHOT') ? repos.aliyunMavenSnapshot.username : repos.aliyunMavenRelease.username
				password version.endsWith('SNAPSHOT') ? repos.aliyunMavenSnapshot.password : repos.aliyunMavenRelease.password
			}
		}
	}
}