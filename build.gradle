plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'com.palantir.git-version' version '0.15.0'
    id 'maven-publish'
    id 'java-library'
}

group = 'icu.clemon'
version = gitVersion()

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

java {
//    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        Production(MavenPublication) {
            groupId = project.group
            artifactId = project.name
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            from components.java

        }
    }
    repositories {
        maven {
            name = "AliNexus"
            def releasesRepoUrl = 'https://packages.aliyun.com/maven/repository/xxxxxx-release-xxxxxxx/'
            def snapshotsRepoUrl = 'https://packages.aliyun.com/maven/repository/xxxxx-snapshot-xxxxxx/'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username 'name'
                password 'passwd'
            }
        }
    }
}
